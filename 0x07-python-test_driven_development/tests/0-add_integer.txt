=============================
The ``0-add_integer`` module
=============================

Importing the ``add_integer`` function from the module:
======================================================
	>>> add_integer = __import__("0-add_integer").add_integer


Tests
================
*Test for regular addition:
	 >>> add_integer(1, 3)
	 4

*Test for positive with negative:
	 >>> add_integer(2, -1)
	 1

*Test for negative with positive:
	 >>> add_integer(-5, 2)
	 -3

*Test for float with int:
	 >>> add_integer(2.1, 5)
	 7

*Test for int with float:
	 >>> add_integer(5, 6.0)
	 11

*Test for both float:
	 >>> add_integer(1.9, 1.1)
	 2

*Test for super long int:
	 >>> add_integer(999999999999999999999999999999, 1)
	 1000000000000000000000000000000

* Missing argument (should raise a TypeError)
    >>> add_integer()
    Traceback (most recent call last):
    ...
    TypeError: add_integer() missing 1 required positional argument: 'a'


* Empty string argument (should raise a TypeError)
    >>> add_integer("")
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer


* Empty string arguments (should raise a TypeError)
    >>> add_integer("", "")
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer


* None argument (should raise a TypeError)
    >>> add_integer(None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer


* Empty list argument (should raise a TypeError)
    >>> add_integer(list())
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer


* List with integer argument (should raise a TypeError)
    >>> add_integer(list(1))
    Traceback (most recent call last):
    ...
    TypeError: 'int' object is not iterable


* Empty dictionary argument (should raise a TypeError)
    >>> add_integer({})
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer


* Dictionary argument (should raise a TypeError)
    >>> add_integer({"1": 1})
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer



* Division by zero argument (should raise a ZeroDivisionError)
    >>> add_integer(12 / 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero


* Two infinite floats as parameters (should raise an OverflowError)
    >>> add_integer(float("inf"), float("inf"))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer


* Negative infinite and positive infinite floats as parameters (should raise an OverflowError)
    >>> add_integer(float("-inf"), float("inf"))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer


* NaN float argument (should raise a ValueError)
    >>> add_integer(float("nan"))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer
